2020-03-17 09:29:15.361 INFO  --- [StartupInfoLogger.java:50][restartedMain] - Starting MyApplication on Popeye with PID 14572 (started by Administrator in C:\Users\Administrator\Desktop\软件工程\第十六组 项目管理系统\后台\system)
2020-03-17 09:29:15.366 INFO  --- [SpringApplication.java:675][restartedMain] - No active profile set, falling back to default profiles: default
2020-03-17 09:29:20.700 INFO  --- [StartupInfoLogger.java:59][restartedMain] - Started MyApplication in 6.03 seconds (JVM running for 9.477)
2020-03-17 09:29:40.092 INFO  --- [HikariDataSource.java:110][http-nio-8080-exec-1] - HikariPool-1 - Starting...
2020-03-17 09:29:40.260 INFO  --- [HikariDataSource.java:123][http-nio-8080-exec-1] - HikariPool-1 - Start completed.
2020-03-17 09:29:40.268 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 09:29:40.311 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: manager001(String), 123456(String)
2020-03-17 09:29:40.342 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 1
2020-03-17 09:29:40.366 INFO  --- [LoginLogAspect.java:46][http-nio-8080-exec-1] - manager001 successful login at 2020-03-17 09:29:40.365
2020-03-17 09:29:40.397 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 09:29:40.403 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 09:29:40.371(Timestamp), 登录(String), 执行了com.dsl.example.controller.LoginController类的authLogin方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 09:29:40.451 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 09:29:40.626 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 09:29:40.627 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: manager001(String)
2020-03-17 09:29:40.638 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 18
2020-03-17 09:30:17.354 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 09:30:17.354 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 09:30:17.365 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 09:30:17.366 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 09:30:17.393 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT count(*) FROM stu_dorm 
2020-03-17 09:30:17.395 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 09:30:17.397 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 09:30:17.399 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.dormitory_id dormID, w.clean_condition dormClean, DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime FROM stu_dorm w ORDER BY w.id DESC LIMIT ?, ? 
2020-03-17 09:30:17.400 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 09:30:17.403 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 5
2020-03-17 09:30:17.408 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 09:30:17.412 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 09:30:17.405(Timestamp), 用户管理点击(String), 执行了com.dsl.example.controller.ManagerController类的listStudent方法(String), SELECT
            w.id                                      id,
            w.user_id                                 userID,
            w.dormitory_id                            dormID,
            w.clean_condition                         dormClean,
            DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime
        FROM stu_dorm w ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 09:30:17.432 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 09:30:18.808 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 09:30:18.808 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 09:30:18.811 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 09:30:18.812 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 09:30:18.813 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT count(*) FROM stu_dorm 
2020-03-17 09:30:18.815 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 09:30:18.816 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 1
2020-03-17 09:30:18.818 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.dormitory_id dormID, w.clean_condition dormClean, DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime FROM stu_dorm w ORDER BY w.id DESC LIMIT ?, ? 
2020-03-17 09:30:18.819 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 09:30:18.822 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 5
2020-03-17 09:30:18.825 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 09:30:18.828 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 09:30:18.824(Timestamp), 用户管理点击(String), 执行了com.dsl.example.controller.ManagerController类的listStudent方法(String), SELECT
            w.id                                      id,
            w.user_id                                 userID,
            w.dormitory_id                            dormID,
            w.clean_condition                         dormClean,
            DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime
        FROM stu_dorm w ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 09:30:18.831 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 09:30:20.263 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 09:30:20.264 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 09:30:20.266 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 09:30:20.266 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 09:30:20.268 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(*) FROM absent 
2020-03-17 09:30:20.270 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 09:30:20.300 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 09:30:20.301 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.absent_time dormTime, w.message message FROM absent w ORDER BY w.id DESC LIMIT ?, ? 
2020-03-17 09:30:20.303 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 09:30:20.304 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 3
2020-03-17 09:30:20.306 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 09:30:20.308 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 09:30:20.305(Timestamp), 缺寝列表点击(String), 执行了com.dsl.example.controller.ManagerController类的listAbsent方法(String), SELECT
               w.id                                      id,
               w.user_id                                 userID,
               w.absent_time                            dormTime,
               w.message                                 message
           FROM absent w ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 09:30:20.310 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 09:53:51.405 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 09:53:51.407 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: manager001(String)
2020-03-17 09:53:51.415 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 18
2020-03-17 09:53:57.485 INFO  --- [LoginLogAspect.java:73][http-nio-8080-exec-7] - manager001 logout at 2020-03-17 09:53:57.485
2020-03-17 09:53:57.489 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 09:53:57.491 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 09:53:57.486(Timestamp), 退出成功(String), 执行了com.dsl.example.controller.LoginController类的logout方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 09:53:57.507 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 10:39:47.467 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 10:39:47.469 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: manager001(String), 123456(String)
2020-03-17 10:39:47.471 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 1
2020-03-17 10:39:47.473 INFO  --- [LoginLogAspect.java:46][http-nio-8080-exec-8] - manager001 successful login at 2020-03-17 10:39:47.473
2020-03-17 10:39:47.477 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 10:39:47.480 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 10:39:47.473(Timestamp), 登录(String), 执行了com.dsl.example.controller.LoginController类的authLogin方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 10:39:47.499 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 10:39:47.580 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 10:39:47.581 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: manager001(String)
2020-03-17 10:39:47.588 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 18
2020-03-17 11:25:44.755 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 11:25:44.757 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: manager001(String), 123456(String)
2020-03-17 11:25:44.759 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 1
2020-03-17 11:25:44.760 INFO  --- [LoginLogAspect.java:46][http-nio-8080-exec-1] - manager001 successful login at 2020-03-17 11:25:44.76
2020-03-17 11:25:44.763 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:25:44.765 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 11:25:44.761(Timestamp), 登录(String), 执行了com.dsl.example.controller.LoginController类的authLogin方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 11:25:44.855 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:25:45.345 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 11:25:45.347 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: manager001(String)
2020-03-17 11:25:45.352 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 18
2020-03-17 11:31:20.672 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:31:20.673 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:31:20.695 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:31:20.696 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:31:20.721 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:31:20.723 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 11:31:20.725 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 11:31:20.726 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:31:20.727 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:31:20.744 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 74
2020-03-17 11:31:20.748 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:31:20.750 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 11:31:20.745(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:31:20.801 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 11:32:21.131 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:32:21.132 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:32:21.134 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:32:21.134 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:32:21.137 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:32:21.138 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 11:32:21.141 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 1
2020-03-17 11:32:21.143 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:32:21.144 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:32:21.165 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 74
2020-03-17 11:32:21.170 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:32:21.171 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 11:32:21.167(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:32:21.174 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 11:32:22.258 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:32:22.258 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:32:22.260 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:32:22.261 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:32:22.263 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(*) FROM absent 
2020-03-17 11:32:22.264 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 11:32:22.266 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 11:32:22.267 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.absent_time dormTime, w.message message FROM absent w ORDER BY w.id DESC LIMIT ?, ? 
2020-03-17 11:32:22.269 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:32:22.272 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 3
2020-03-17 11:32:22.275 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:32:22.278 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 11:32:22.273(Timestamp), 缺寝列表点击(String), 执行了com.dsl.example.controller.ManagerController类的listAbsent方法(String), SELECT
               w.id                                      id,
               w.user_id                                 userID,
               w.absent_time                            dormTime,
               w.message                                 message
           FROM absent w ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 11:32:22.280 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 11:33:30.044 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 11:33:30.046 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: manager001(String)
2020-03-17 11:33:30.054 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 18
2020-03-17 11:33:30.383 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:33:30.384 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:33:30.386 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["manager","user"],"roleId":2,"nickname":"我是项目管理员001","roleName":"项目管理员","permissionList":["absent:delete","student:update","user:list","absent:list","absent:add","student:list","student:add","student:delete","absent:update"],"userId":10004}
2020-03-17 11:33:30.387 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[absent:delete, student:update, user:list, absent:list, absent:add, student:list, student:add, student:delete, absent:update]
2020-03-17 11:33:30.389 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT count(*) FROM absent 
2020-03-17 11:33:30.390 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 
2020-03-17 11:33:30.393 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 1
2020-03-17 11:33:30.394 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.absent_time dormTime, w.message message FROM absent w ORDER BY w.id DESC LIMIT ?, ? 
2020-03-17 11:33:30.396 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:33:30.399 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 3
2020-03-17 11:33:30.404 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:33:30.406 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 11:33:30.4(Timestamp), 缺寝列表点击(String), 执行了com.dsl.example.controller.ManagerController类的listAbsent方法(String), SELECT
               w.id                                      id,
               w.user_id                                 userID,
               w.absent_time                            dormTime,
               w.message                                 message
           FROM absent w ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 11:33:30.421 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:34:41.263 INFO  --- [LoginLogAspect.java:73][http-nio-8080-exec-8] - manager001 logout at 2020-03-17 11:34:41.263
2020-03-17 11:34:41.267 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:34:41.268 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), manager001(String), 2020-03-17 11:34:41.264(Timestamp), 退出成功(String), 执行了com.dsl.example.controller.LoginController类的logout方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 11:34:41.287 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 11:34:48.407 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 11:34:48.409 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: admin(String), 123456(String)
2020-03-17 11:34:48.412 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 1
2020-03-17 11:34:48.414 INFO  --- [LoginLogAspect.java:46][http-nio-8080-exec-9] - admin successful login at 2020-03-17 11:34:48.413
2020-03-17 11:34:48.417 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:34:48.419 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:34:48.414(Timestamp), 登录(String), 执行了com.dsl.example.controller.LoginController类的authLogin方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 11:34:48.434 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:34:48.830 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 11:34:48.831 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: admin(String)
2020-03-17 11:34:48.835 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 8
2020-03-17 11:34:54.146 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:34:54.147 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:34:54.148 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:34:54.149 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:34:54.151 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:34:54.154 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 
2020-03-17 11:34:54.156 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 1
2020-03-17 11:34:54.157 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:34:54.159 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:34:54.178 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 74
2020-03-17 11:34:54.184 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:34:54.185 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:34:54.179(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:34:54.188 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:34:54.462 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:34:54.463 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:34:54.465 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:34:54.465 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:34:54.468 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:34:54.469 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:34:54.471 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:34:54.472 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:34:54.475 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 11:34:54.477 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 11:34:54.479 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 4
2020-03-17 11:34:54.482 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:34:54.483 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:34:54.48(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 11:34:54.486 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 11:36:05.033 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:05.034 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:05.035 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:05.036 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:05.037 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: select count(0) from sys_user WHERE username=? AND delete_status='1'; 
2020-03-17 11:36:05.038 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 项目经理(String)
2020-03-17 11:36:05.040 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 11:36:05.041 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_user (username, password, nickname, role_id) VALUES (?, ?, ?, ?) 
2020-03-17 11:36:05.042 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 项目经理(String), 123(String), 李大勇(String), 1(Integer)
2020-03-17 11:36:05.148 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 11:36:05.154 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:36:05.156 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:36:05.151(Timestamp), 添加用户操作(String), 执行了com.dsl.example.controller.UserController类的addUser方法(String), INSERT INTO sys_user
        (username, password, nickname, role_id) VALUES
            (?, ?, ?, ?)(String), Popeye/192.168.240.1(String)
2020-03-17 11:36:05.165 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 11:36:05.373 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:05.373 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:05.375 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:05.375 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:05.376 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:36:05.377 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 11:36:05.378 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 1
2020-03-17 11:36:05.380 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:36:05.380 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:36:05.396 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 92
2020-03-17 11:36:05.398 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:36:05.399 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:36:05.397(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:36:05.455 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 11:36:25.278 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:25.279 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:25.280 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:25.280 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:25.282 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:25.282 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:36:25.282 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:25.282 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:36:25.284 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 11:36:25.285 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 11:36:25.286 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 11:36:25.286 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 
2020-03-17 11:36:25.292 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 18
2020-03-17 11:36:25.296 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:36:25.298 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:36:25.293(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 11:36:25.299 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 53
2020-03-17 11:36:25.303 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:36:25.305 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:36:25.301(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 11:36:25.319 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 11:36:25.328 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 11:37:59.629 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:37:59.630 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:37:59.632 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:37:59.632 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:37:59.635 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, p.id permissionId FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.id = ? 
2020-03-17 11:37:59.636 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 2(Integer)
2020-03-17 11:37:59.638 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 9
2020-03-17 11:37:59.640 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: UPDATE sys_role SET role_name = ? WHERE id = ? 
2020-03-17 11:37:59.641 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 项目经理(String), 2(Integer)
2020-03-17 11:37:59.683 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:37:59.996 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:37:59.997 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:37:59.993(Timestamp), 更新角色操作(String), 执行了com.dsl.example.controller.UserController类的updateRole方法(String), UPDATE sys_role
        SET
            role_name = ?
        WHERE id = ?(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:00.015 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:38:00.083 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:00.084 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:00.085 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:00.086 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:00.088 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 11:38:00.088 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 
2020-03-17 11:38:00.099 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 53
2020-03-17 11:38:00.102 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:38:00.103 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:38:00.101(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:00.205 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 11:38:10.685 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:10.685 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:10.687 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:10.688 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:10.690 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, p.id permissionId FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.id = ? 
2020-03-17 11:38:10.691 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 3(Integer)
2020-03-17 11:38:10.694 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 20
2020-03-17 11:38:10.695 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: UPDATE sys_role SET role_name = ? WHERE id = ? 
2020-03-17 11:38:10.696 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 开发人员(String), 3(Integer)
2020-03-17 11:38:10.718 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:38:10.774 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:38:10.775 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:38:10.77(Timestamp), 更新角色操作(String), 执行了com.dsl.example.controller.UserController类的updateRole方法(String), UPDATE sys_role
        SET
            role_name = ?
        WHERE id = ?(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:10.777 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:38:10.937 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:10.938 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:10.940 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:10.941 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:10.942 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 11:38:10.943 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 11:38:10.959 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 53
2020-03-17 11:38:10.962 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:38:10.966 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:38:10.96(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:10.969 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 11:38:38.128 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:38.128 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:38.130 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:38.131 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:38.134 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, p.id permissionId FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.id = ? 
2020-03-17 11:38:38.135 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 4(Integer)
2020-03-17 11:38:38.137 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 8
2020-03-17 11:38:38.138 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: UPDATE sys_role SET role_name = ? WHERE id = ? 
2020-03-17 11:38:38.139 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 测试人员(String), 4(Integer)
2020-03-17 11:38:38.206 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:38:38.267 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:38:38.268 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:38:38.264(Timestamp), 更新角色操作(String), 执行了com.dsl.example.controller.UserController类的updateRole方法(String), UPDATE sys_role
        SET
            role_name = ?
        WHERE id = ?(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:38.285 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:38:38.386 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:38.387 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:38.389 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:38.389 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:38.390 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 11:38:38.391 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 11:38:38.402 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 53
2020-03-17 11:38:38.404 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:38:38.406 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:38:38.403(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:38.409 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 11:38:49.225 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:49.226 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:49.226 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:49.227 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:49.227 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:49.228 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:49.228 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:49.228 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:49.229 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:49.230 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:49.230 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:38:49.231 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:38:49.231 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 11:38:49.231 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:38:49.232 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 11:38:49.233 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 11:38:49.234 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:38:49.234 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 11:38:49.234 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:38:49.235 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 4
2020-03-17 11:38:49.240 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:38:49.242 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:38:49.237(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:49.244 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 11:38:49.250 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 92
2020-03-17 11:38:49.254 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:38:49.256 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:38:49.252(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:38:49.292 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 11:39:01.124 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:01.125 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:01.126 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:01.127 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:01.216 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:01.217 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 李大勇(String), 1(Integer), 2(String), 10017(Integer)
2020-03-17 11:39:01.264 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 11:39:01.269 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:01.272 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:01.265(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:01.275 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 11:39:01.378 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:01.380 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:01.383 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:01.384 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:01.387 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:01.388 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 11:39:01.390 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 11:39:01.391 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:01.392 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:01.403 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 74
2020-03-17 11:39:01.405 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:01.407 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:01.404(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:01.410 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 11:39:03.730 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:03.730 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:03.741 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:03.741 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:03.743 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:03.744 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 包三五(String), 3(Integer), 2(String), 10016(Integer)
2020-03-17 11:39:03.823 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:39:03.827 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:03.828 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:03.826(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:03.830 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:39:04.208 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:04.210 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:04.211 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:04.212 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:04.214 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:04.216 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 
2020-03-17 11:39:04.218 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 1
2020-03-17 11:39:04.219 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:04.221 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:04.232 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 71
2020-03-17 11:39:04.235 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:04.236 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:04.233(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:04.243 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 11:39:07.093 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:07.094 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:07.095 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:07.096 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:07.098 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:07.100 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 张宝时(String), 3(Integer), 2(String), 10015(Integer)
2020-03-17 11:39:07.144 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:39:07.149 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:07.150 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:07.145(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:07.153 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:39:07.524 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:07.525 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:07.526 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:07.527 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:07.529 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:07.530 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 11:39:07.532 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 1
2020-03-17 11:39:07.534 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:07.535 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:07.551 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 68
2020-03-17 11:39:07.555 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:07.557 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:07.553(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:07.563 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 11:39:09.463 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:09.464 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:09.466 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:09.467 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:09.470 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:09.472 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 李飞(String), 3(Integer), 2(String), 10014(Integer)
2020-03-17 11:39:09.694 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:39:09.697 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:09.699 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:09.695(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:09.704 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:39:10.070 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:10.070 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:10.071 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:10.072 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:10.073 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:10.074 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 11:39:10.075 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 1
2020-03-17 11:39:10.076 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:10.077 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:10.084 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 65
2020-03-17 11:39:10.086 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:10.088 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:10.085(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:10.090 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 11:39:12.449 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:12.450 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:12.452 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:12.452 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:12.455 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:12.456 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 周张(String), 3(Integer), 2(String), 10013(Integer)
2020-03-17 11:39:12.503 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 11:39:12.508 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:12.510 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:12.505(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:12.512 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 11:39:12.878 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:12.879 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:12.881 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:12.881 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:12.883 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:12.884 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 11:39:12.887 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 11:39:12.889 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:12.890 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:12.900 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 62
2020-03-17 11:39:12.903 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:12.906 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:12.901(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:12.912 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 11:39:16.357 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:16.358 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:16.359 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:16.359 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:16.361 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:16.363 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 罗溪(String), 3(Integer), 2(String), 10012(Integer)
2020-03-17 11:39:16.406 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 11:39:16.409 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:16.410 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:16.408(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:16.413 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 11:39:16.791 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:16.792 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:16.794 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:16.794 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:16.797 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:16.797 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 11:39:16.799 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 11:39:16.799 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:16.801 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:16.809 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 59
2020-03-17 11:39:16.812 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:16.814 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:16.81(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:16.976 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 11:39:18.683 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:18.684 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:18.686 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:18.687 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:18.689 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:18.691 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 伟谭师(String), 3(Integer), 2(String), 10011(Integer)
2020-03-17 11:39:18.850 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:39:18.857 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:18.858 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:18.852(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:18.861 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:39:19.269 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:19.270 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:19.271 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:19.271 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:19.272 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:19.273 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 
2020-03-17 11:39:19.275 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 1
2020-03-17 11:39:19.276 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:19.277 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:19.282 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 56
2020-03-17 11:39:19.285 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:19.286 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:19.284(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:19.288 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 11:39:21.190 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:21.190 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:21.192 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:21.192 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:21.194 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:21.195 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 华夫格(String), 3(Integer), 2(String), 10010(Integer)
2020-03-17 11:39:21.244 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:39:21.246 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:21.247 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:21.245(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:21.248 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:39:21.615 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:21.616 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:21.619 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:21.620 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:21.622 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:21.622 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 11:39:21.624 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 1
2020-03-17 11:39:21.626 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:21.626 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:21.630 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 53
2020-03-17 11:39:21.632 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:21.634 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:21.631(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:21.637 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 11:39:24.049 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:24.050 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:24.054 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:24.055 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:24.057 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:24.058 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 岳飞飞(String), 3(Integer), 2(String), 10009(Integer)
2020-03-17 11:39:24.098 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:39:24.103 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:24.105 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:24.099(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:24.107 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 11:39:24.468 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:24.469 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:24.470 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:24.472 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:24.473 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:24.475 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 11:39:24.477 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 1
2020-03-17 11:39:24.479 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:24.479 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:24.485 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 50
2020-03-17 11:39:24.488 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:24.490 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:24.487(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:24.492 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 11:39:28.891 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:28.892 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:28.893 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:28.894 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:28.896 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:28.897 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 我是一个用户(String), 3(Integer), 2(String), 10006(Integer)
2020-03-17 11:39:28.969 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 11:39:28.972 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:28.973 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:28.971(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:28.976 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 11:39:29.344 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:29.345 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:29.346 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:29.347 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:29.349 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:29.350 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 11:39:29.352 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 11:39:29.353 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:29.354 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:29.359 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 47
2020-03-17 11:39:29.363 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:29.365 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:29.36(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:29.429 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 11:39:34.088 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:34.089 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:34.091 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:34.091 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:34.093 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 11:39:34.094 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 我是一个用户(String), 3(Integer), 2(String), 10007(Integer)
2020-03-17 11:39:34.151 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 11:39:34.154 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:34.155 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:34.153(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:34.157 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 11:39:34.524 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:34.525 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:34.526 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:39:34.526 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:39:34.528 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:39:34.528 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 11:39:34.529 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 11:39:34.531 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:39:34.532 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:39:34.536 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 44
2020-03-17 11:39:34.541 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:39:34.543 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:39:34.538(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:39:34.549 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 11:40:21.572 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:21.572 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:21.573 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:21.574 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:21.575 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: select count(0) from sys_user WHERE username=? AND delete_status='1'; 
2020-03-17 11:40:21.576 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 李飞(String)
2020-03-17 11:40:21.577 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 1
2020-03-17 11:40:21.578 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_user (username, password, nickname, role_id) VALUES (?, ?, ?, ?) 
2020-03-17 11:40:21.578 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 李飞(String), 123(String), 李大飞(String), 3(Integer)
2020-03-17 11:40:21.668 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:40:21.672 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:40:21.673 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:40:21.67(Timestamp), 添加用户操作(String), 执行了com.dsl.example.controller.UserController类的addUser方法(String), INSERT INTO sys_user
        (username, password, nickname, role_id) VALUES
            (?, ?, ?, ?)(String), Popeye/192.168.240.1(String)
2020-03-17 11:40:21.675 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 11:40:21.829 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:21.829 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:21.830 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:21.831 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:21.832 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:40:21.834 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 
2020-03-17 11:40:21.835 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 1
2020-03-17 11:40:21.836 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:40:21.836 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:40:21.841 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 47
2020-03-17 11:40:21.843 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:40:21.845 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:40:21.842(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:40:21.847 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 11:40:41.698 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:41.698 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:41.699 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:41.699 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:41.700 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:41.700 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:41.701 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:41.701 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:41.703 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 11:40:41.703 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 11:40:41.704 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 
2020-03-17 11:40:41.705 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 11:40:41.708 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 18
2020-03-17 11:40:41.711 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 27
2020-03-17 11:40:41.714 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:40:41.715 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:40:41.712(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 11:40:41.720 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 11:40:41.724 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:40:41.726 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:40:41.712(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 11:40:41.787 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 11:40:58.520 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:58.520 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:58.521 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:58.521 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:58.521 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:58.521 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:58.522 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:58.523 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:58.523 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:58.524 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:58.524 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"admin","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 11:40:58.526 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 11:40:58.527 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 11:40:58.527 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 
2020-03-17 11:40:58.529 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 1
2020-03-17 11:40:58.529 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 11:40:58.530 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 11:40:58.530 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 11:40:58.531 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 11:40:58.531 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 4
2020-03-17 11:40:58.537 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:40:58.538 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 47
2020-03-17 11:40:58.538 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:40:58.533(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 11:40:58.541 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 11:40:58.541 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 11:40:58.542 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 11:40:58.539(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 11:40:58.577 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 16:26:43.795 INFO  --- [StartupInfoLogger.java:50][restartedMain] - Starting MyApplication on Popeye with PID 3204 (started by Administrator in C:\Users\Administrator\Desktop\软件工程\第十六组 项目管理系统\后台\system)
2020-03-17 16:26:43.801 INFO  --- [SpringApplication.java:675][restartedMain] - No active profile set, falling back to default profiles: default
2020-03-17 16:26:50.226 INFO  --- [StartupInfoLogger.java:59][restartedMain] - Started MyApplication in 7.106 seconds (JVM running for 9.107)
2020-03-17 17:48:07.694 INFO  --- [HikariDataSource.java:110][http-nio-8080-exec-2] - HikariPool-1 - Starting...
2020-03-17 17:48:08.067 INFO  --- [HikariDataSource.java:123][http-nio-8080-exec-2] - HikariPool-1 - Start completed.
2020-03-17 17:48:08.082 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:48:08.168 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 李飞(String), 123(String)
2020-03-17 17:48:08.471 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 1
2020-03-17 17:48:08.516 INFO  --- [LoginLogAspect.java:46][http-nio-8080-exec-2] - 李飞 successful login at 2020-03-17 17:48:08.516
2020-03-17 17:48:08.573 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:48:08.583 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), 李飞(String), 2020-03-17 17:48:08.53(Timestamp), 登录(String), 执行了com.dsl.example.controller.LoginController类的authLogin方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 17:48:08.608 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 17:48:08.872 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 17:48:08.875 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 李飞(String)
2020-03-17 17:48:08.885 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 3
2020-03-17 17:49:01.570 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:49:01.572 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:49:01.583 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:49:01.585 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:49:01.642 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT count(*) FROM stu_dorm where user_id in (select s.id from sys_user s where username=?) 
2020-03-17 17:49:01.648 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 李飞(String)
2020-03-17 17:49:01.653 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 1
2020-03-17 17:49:01.655 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.dormitory_id dormID, w.clean_condition dormClean, DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime FROM stu_dorm w where w.user_id in (select s.id from sys_user s where username=?)ORDER BY w.id DESC 
2020-03-17 17:49:01.657 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 李飞(String)
2020-03-17 17:49:01.659 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 0
2020-03-17 17:49:01.667 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:49:01.671 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), 李飞(String), 2020-03-17 17:49:01.662(Timestamp), 获取用户个人信息点击(String), 执行了com.dsl.example.controller.StudentController类的getStuInfo方法(String), SELECT
            w.id                                      id,
            w.user_id                                 userID,
            w.dormitory_id                            dormID,
            w.clean_condition                         dormClean,
            DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime
        FROM stu_dorm w WHERE w.user_id in (select id from sys_user where username=?) ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:49:01.694 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 17:49:02.525 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:49:02.525 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:49:02.527 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:49:02.528 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:49:02.532 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(*) FROM absent where user_id in (select s.id from sys_user s where username=?) 
2020-03-17 17:49:02.533 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 李飞(String)
2020-03-17 17:49:02.535 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 17:49:02.537 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.absent_time dormTime, w.message message FROM absent w where w.user_id in (select s.id from sys_user s where username=?)ORDER BY w.id DESC 
2020-03-17 17:49:02.539 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 李飞(String)
2020-03-17 17:49:02.541 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 0
2020-03-17 17:49:02.544 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:49:02.547 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 李飞(String), 2020-03-17 17:49:02.543(Timestamp), 获取用户缺寝记录点击(String), 执行了com.dsl.example.controller.StudentController类的getAbsentInfo方法(String), SELECT
                w.id                                      id,
                w.user_id                                 userID,
                w.absent_time                            dormTime,
                w.message                                message
            FROM absent w WHERE w.user_id in (select id from sys_user where username=?) ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:49:02.564 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 17:49:03.874 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:49:03.874 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:49:03.877 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:49:03.880 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:49:03.890 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT count(*) FROM stu_dorm where user_id in (select s.id from sys_user s where username=?) 
2020-03-17 17:49:03.893 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 李飞(String)
2020-03-17 17:49:03.898 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 1
2020-03-17 17:49:03.903 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.dormitory_id dormID, w.clean_condition dormClean, DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime FROM stu_dorm w where w.user_id in (select s.id from sys_user s where username=?)ORDER BY w.id DESC 
2020-03-17 17:49:03.906 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 李飞(String)
2020-03-17 17:49:03.908 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 0
2020-03-17 17:49:03.912 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:49:03.915 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), 李飞(String), 2020-03-17 17:49:03.91(Timestamp), 获取用户个人信息点击(String), 执行了com.dsl.example.controller.StudentController类的getStuInfo方法(String), SELECT
            w.id                                      id,
            w.user_id                                 userID,
            w.dormitory_id                            dormID,
            w.clean_condition                         dormClean,
            DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime
        FROM stu_dorm w WHERE w.user_id in (select id from sys_user where username=?) ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:49:04.007 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 17:50:17.977 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 17:50:17.993 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 李飞(String)
2020-03-17 17:50:18.004 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 3
2020-03-17 17:50:18.905 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:50:18.906 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:50:18.908 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:50:18.908 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:50:18.911 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT count(*) FROM stu_dorm where user_id in (select s.id from sys_user s where username=?) 
2020-03-17 17:50:18.912 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 李飞(String)
2020-03-17 17:50:18.916 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 1
2020-03-17 17:50:18.918 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.dormitory_id dormID, w.clean_condition dormClean, DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime FROM stu_dorm w where w.user_id in (select s.id from sys_user s where username=?)ORDER BY w.id DESC 
2020-03-17 17:50:18.919 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 李飞(String)
2020-03-17 17:50:18.922 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 0
2020-03-17 17:50:18.928 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:50:18.931 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), 李飞(String), 2020-03-17 17:50:18.924(Timestamp), 获取用户个人信息点击(String), 执行了com.dsl.example.controller.StudentController类的getStuInfo方法(String), SELECT
            w.id                                      id,
            w.user_id                                 userID,
            w.dormitory_id                            dormID,
            w.clean_condition                         dormClean,
            DATE_FORMAT(w.write_time, '%Y.%m.%d %T') createTime
        FROM stu_dorm w WHERE w.user_id in (select id from sys_user where username=?) ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:50:19.018 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 17:50:31.606 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:50:31.607 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:50:31.611 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["student"],"roleId":3,"nickname":"李大飞","roleName":"开发人员","permissionList":["student:select","absent:select"],"userId":10018}
2020-03-17 17:50:31.612 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[student:select, absent:select]
2020-03-17 17:50:31.615 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT count(*) FROM absent where user_id in (select s.id from sys_user s where username=?) 
2020-03-17 17:50:31.618 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 李飞(String)
2020-03-17 17:50:31.622 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 1
2020-03-17 17:50:31.624 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT w.id id, w.user_id userID, w.absent_time dormTime, w.message message FROM absent w where w.user_id in (select s.id from sys_user s where username=?)ORDER BY w.id DESC 
2020-03-17 17:50:31.625 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 李飞(String)
2020-03-17 17:50:31.628 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 0
2020-03-17 17:50:31.635 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:50:31.637 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), 李飞(String), 2020-03-17 17:50:31.631(Timestamp), 获取用户缺寝记录点击(String), 执行了com.dsl.example.controller.StudentController类的getAbsentInfo方法(String), SELECT
                w.id                                      id,
                w.user_id                                 userID,
                w.absent_time                            dormTime,
                w.message                                message
            FROM absent w WHERE w.user_id in (select id from sys_user where username=?) ORDER BY w.id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:50:31.640 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 17:50:41.753 INFO  --- [LoginLogAspect.java:73][http-nio-8080-exec-10] - 李飞 logout at 2020-03-17 17:50:41.753
2020-03-17 17:50:41.760 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:50:41.762 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), 李飞(String), 2020-03-17 17:50:41.754(Timestamp), 退出成功(String), 执行了com.dsl.example.controller.LoginController类的logout方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 17:50:41.764 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 17:50:55.164 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:50:55.165 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: admin(String), 123(String)
2020-03-17 17:50:55.168 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 0
2020-03-17 17:50:55.243 ERROR --- [GlobalExceptionHandler.java:43][http-nio-8080-exec-1] - 异常
java.lang.NullPointerException: null
	at com.dsl.example.aspect.LoginLogAspect.afterLogin(LoginLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dsl.example.controller.LoginController$$EnhancerBySpringCGLIB$$795ade4c.authLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-17 17:50:55.248 WARN  --- [AbstractHandlerExceptionResolver.java:194][http-nio-8080-exec-1] - Resolved [java.lang.NullPointerException]
2020-03-17 17:50:59.362 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:50:59.363 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: admin(String), 1234(String)
2020-03-17 17:50:59.366 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 0
2020-03-17 17:50:59.369 ERROR --- [GlobalExceptionHandler.java:43][http-nio-8080-exec-2] - 异常
java.lang.NullPointerException: null
	at com.dsl.example.aspect.LoginLogAspect.afterLogin(LoginLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dsl.example.controller.LoginController$$EnhancerBySpringCGLIB$$795ade4c.authLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-17 17:50:59.372 WARN  --- [AbstractHandlerExceptionResolver.java:194][http-nio-8080-exec-2] - Resolved [java.lang.NullPointerException]
2020-03-17 17:51:14.597 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:51:14.601 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 李大勇(String), 1234(String)
2020-03-17 17:51:14.604 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 0
2020-03-17 17:51:14.607 ERROR --- [GlobalExceptionHandler.java:43][http-nio-8080-exec-3] - 异常
java.lang.NullPointerException: null
	at com.dsl.example.aspect.LoginLogAspect.afterLogin(LoginLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dsl.example.controller.LoginController$$EnhancerBySpringCGLIB$$795ade4c.authLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-17 17:51:14.617 WARN  --- [AbstractHandlerExceptionResolver.java:194][http-nio-8080-exec-3] - Resolved [java.lang.NullPointerException]
2020-03-17 17:51:20.405 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:51:20.408 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 李勇(String), 1234(String)
2020-03-17 17:51:20.411 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 0
2020-03-17 17:51:20.414 ERROR --- [GlobalExceptionHandler.java:43][http-nio-8080-exec-4] - 异常
java.lang.NullPointerException: null
	at com.dsl.example.aspect.LoginLogAspect.afterLogin(LoginLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dsl.example.controller.LoginController$$EnhancerBySpringCGLIB$$795ade4c.authLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-17 17:51:20.418 WARN  --- [AbstractHandlerExceptionResolver.java:194][http-nio-8080-exec-4] - Resolved [java.lang.NullPointerException]
2020-03-17 17:54:14.383 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:54:14.384 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: admin(String), 12(String)
2020-03-17 17:54:14.386 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 0
2020-03-17 17:54:14.389 ERROR --- [GlobalExceptionHandler.java:43][http-nio-8080-exec-5] - 异常
java.lang.NullPointerException: null
	at com.dsl.example.aspect.LoginLogAspect.afterLogin(LoginLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dsl.example.controller.LoginController$$EnhancerBySpringCGLIB$$795ade4c.authLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-17 17:54:14.392 WARN  --- [AbstractHandlerExceptionResolver.java:194][http-nio-8080-exec-5] - Resolved [java.lang.NullPointerException]
2020-03-17 17:54:16.307 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:54:16.308 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: admin(String), 123(String)
2020-03-17 17:54:16.311 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 0
2020-03-17 17:54:16.313 ERROR --- [GlobalExceptionHandler.java:43][http-nio-8080-exec-6] - 异常
java.lang.NullPointerException: null
	at com.dsl.example.aspect.LoginLogAspect.afterLogin(LoginLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dsl.example.controller.LoginController$$EnhancerBySpringCGLIB$$795ade4c.authLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-17 17:54:16.315 WARN  --- [AbstractHandlerExceptionResolver.java:194][http-nio-8080-exec-6] - Resolved [java.lang.NullPointerException]
2020-03-17 17:54:18.237 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:54:18.238 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: admin(String), 1234(String)
2020-03-17 17:54:18.240 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 0
2020-03-17 17:54:18.242 ERROR --- [GlobalExceptionHandler.java:43][http-nio-8080-exec-7] - 异常
java.lang.NullPointerException: null
	at com.dsl.example.aspect.LoginLogAspect.afterLogin(LoginLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dsl.example.controller.LoginController$$EnhancerBySpringCGLIB$$795ade4c.authLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-17 17:54:18.246 WARN  --- [AbstractHandlerExceptionResolver.java:194][http-nio-8080-exec-7] - Resolved [java.lang.NullPointerException]
2020-03-17 17:54:20.167 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT u.id userId, u.username username, u.password password, u.nickname nickName FROM sys_user u WHERE u.username = ? AND u.password = ? AND u.delete_status = '1' 
2020-03-17 17:54:20.168 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: admin(String), 123456(String)
2020-03-17 17:54:20.171 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 1
2020-03-17 17:54:20.173 INFO  --- [LoginLogAspect.java:46][http-nio-8080-exec-8] - admin successful login at 2020-03-17 17:54:20.173
2020-03-17 17:54:20.177 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:54:20.179 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:54:20.173(Timestamp), 登录(String), 执行了com.dsl.example.controller.LoginController类的authLogin方法(String), null, Popeye/192.168.240.1(String)
2020-03-17 17:54:20.181 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 17:54:20.581 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 17:54:20.583 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: admin(String)
2020-03-17 17:54:20.589 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 8
2020-03-17 17:54:25.948 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:25.949 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:25.965 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:25.966 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:26.009 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:54:26.010 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 17:54:26.012 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 1
2020-03-17 17:54:26.013 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:54:26.014 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:54:26.045 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 47
2020-03-17 17:54:26.051 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:54:26.053 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:54:26.047(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:54:26.055 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 17:54:26.240 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:26.241 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:26.241 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:26.243 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:26.246 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:26.246 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:26.248 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:26.248 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:26.250 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 17:54:26.251 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 
2020-03-17 17:54:26.255 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 4
2020-03-17 17:54:26.259 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:54:26.260 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:54:26.257(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 17:54:26.263 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 17:54:48.855 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:48.856 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:48.857 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:48.858 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:48.857 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:48.860 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:48.861 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 17:54:48.862 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:54:48.862 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 17:54:48.862 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:54:48.866 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 17:54:48.870 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 17:54:48.879 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 18
2020-03-17 17:54:48.880 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 27
2020-03-17 17:54:48.885 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:54:48.885 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:54:48.888 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:54:48.882(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 17:54:48.887 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:54:48.882(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 17:54:48.890 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 17:54:48.890 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 17:55:02.101 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:02.103 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:02.105 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:02.105 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:02.108 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:02.108 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:02.110 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:02.111 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:02.115 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 17:55:02.116 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 17:55:02.120 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 4
2020-03-17 17:55:02.126 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:02.128 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:02.122(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:02.131 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 17:55:02.173 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:02.174 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:02.188 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:02.188 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:02.193 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:55:02.201 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 17:55:02.203 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 17:55:02.205 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:55:02.206 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:55:02.227 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 47
2020-03-17 17:55:02.232 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:02.234 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:02.23(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:02.237 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 17:55:11.297 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:11.298 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:11.301 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:11.303 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:11.397 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 17:55:11.398 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 李大飞(String), 3(Integer), 2(String), 10018(Integer)
2020-03-17 17:55:11.444 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 17:55:11.450 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:11.451 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:11.446(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:11.454 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 17:55:11.979 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:11.980 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:11.990 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:11.991 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:11.996 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:55:11.998 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 
2020-03-17 17:55:12.001 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 1
2020-03-17 17:55:12.002 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:55:12.003 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:55:12.018 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 44
2020-03-17 17:55:12.022 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:12.033 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:12.02(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:12.035 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 17:55:14.394 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:14.396 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:14.399 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:14.400 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:14.403 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 17:55:14.405 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 我是管理员001(String), 1(Integer), 2(String), 10008(Integer)
2020-03-17 17:55:14.453 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 17:55:14.459 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:14.461 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:14.456(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:14.463 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 17:55:14.865 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:14.866 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:14.868 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:14.869 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:14.870 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:55:14.872 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 
2020-03-17 17:55:14.875 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 1
2020-03-17 17:55:14.876 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:55:14.878 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:55:14.887 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 26
2020-03-17 17:55:14.890 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:14.892 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:14.889(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:14.894 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 17:55:16.917 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:16.918 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:16.919 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:16.920 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:16.921 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 17:55:16.922 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 我是项目管理员001(String), 2(Integer), 2(String), 10004(Integer)
2020-03-17 17:55:16.977 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 17:55:16.984 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:16.987 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:16.979(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:16.989 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 17:55:17.376 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:17.377 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:17.379 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:17.381 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:17.383 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:55:17.385 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 
2020-03-17 17:55:17.387 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 1
2020-03-17 17:55:17.388 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:55:17.389 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:55:17.395 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 8
2020-03-17 17:55:17.398 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:17.400 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:17.396(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:17.403 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 17:55:38.006 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:38.007 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:38.008 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:38.009 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:38.011 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 17:55:38.012 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 系统管理员(String), 4(Integer), 1(String), 10003(Integer)
2020-03-17 17:55:38.097 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 17:55:38.103 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:38.104 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:38.098(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:38.107 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 17:55:39.192 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:39.192 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:39.193 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"我是超级管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:39.194 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:39.196 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:55:39.197 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 17:55:39.249 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 1
2020-03-17 17:55:39.252 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:55:39.253 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:55:39.261 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 8
2020-03-17 17:55:39.264 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:39.266 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:39.262(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:39.268 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 17:55:46.191 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT u.id userId, u.nickname nickname, u.role_id roleId, r.role_name roleName, p.menu_code menuCode, p.permission_code permissionCode FROM sys_user u LEFT JOIN sys_role r ON r.id = u.role_id LEFT JOIN sys_role_permission rp ON u.role_id = rp.role_id LEFT JOIN sys_permission p ON rp.permission_id = p.id AND rp.delete_status = '1' WHERE u.username = ? AND u.delete_status = '1' 
2020-03-17 17:55:46.192 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: admin(String)
2020-03-17 17:55:46.200 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 8
2020-03-17 17:55:47.321 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:47.322 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:47.323 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:47.324 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:47.327 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:55:47.327 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 17:55:47.329 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 17:55:47.331 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:55:47.332 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:55:47.337 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 8
2020-03-17 17:55:47.340 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:47.341 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:47.342 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:47.342 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:47.343 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:47.344 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:47.344 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:47.339(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:47.345 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:47.347 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 17:55:47.347 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:47.348 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:47.355 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 17:55:47.356 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 
2020-03-17 17:55:47.358 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 4
2020-03-17 17:55:47.361 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:47.363 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:47.36(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:47.365 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 17:55:52.238 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:52.239 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:52.243 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:52.244 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:52.248 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 17:55:52.249 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 
2020-03-17 17:55:52.264 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 27
2020-03-17 17:55:52.267 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:52.269 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:52.266(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:52.271 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 17:55:52.549 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:52.551 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:52.553 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:55:52.553 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:55:52.555 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 17:55:52.556 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 
2020-03-17 17:55:52.562 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 18
2020-03-17 17:55:52.572 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:55:52.573 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:55:52.569(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 17:55:52.575 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 17:56:25.979 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:56:25.979 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:56:25.982 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:56:25.983 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:56:25.988 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, p.id permissionId FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.id = ? 
2020-03-17 17:56:25.989 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 4(Integer)
2020-03-17 17:56:25.994 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 8
2020-03-17 17:56:25.996 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: UPDATE sys_role SET role_name = ? WHERE id = ? 
2020-03-17 17:56:25.997 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 系统管理员(String), 4(Integer)
2020-03-17 17:56:26.000 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 17:56:26.010 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: insert into sys_role_permission (role_id, permission_id) values (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) 
2020-03-17 17:56:26.012 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 4(String), 201(Integer), 4(String), 202(Integer), 4(String), 105(Integer), 4(String), 101(Integer), 4(String), 106(Integer), 4(String), 107(Integer), 4(String), 108(Integer), 4(String), 102(Integer), 4(String), 103(Integer), 4(String), 104(Integer)
2020-03-17 17:56:26.014 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 10
2020-03-17 17:56:26.184 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:56:26.186 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:56:26.18(Timestamp), 更新角色操作(String), 执行了com.dsl.example.controller.UserController类的updateRole方法(String), UPDATE sys_role
        SET
            role_name = ?
        WHERE id = ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:56:26.190 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 17:56:26.338 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:56:26.339 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:56:26.341 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:56:26.342 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:56:26.344 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 17:56:26.345 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 17:56:26.359 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 37
2020-03-17 17:56:26.361 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:56:26.362 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:56:26.36(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 17:56:26.402 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 17:57:00.431 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:00.432 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:00.434 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:00.435 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:00.440 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, p.id permissionId FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.id = ? 
2020-03-17 17:57:00.441 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 4(Integer)
2020-03-17 17:57:00.446 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 18
2020-03-17 17:57:00.450 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: UPDATE sys_role_permission SET delete_status = '2' WHERE role_id = ? AND permission_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020-03-17 17:57:00.451 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 4(String), 101(Integer), 102(Integer), 103(Integer), 104(Integer), 201(Integer), 105(Integer), 202(Integer), 106(Integer), 107(Integer), 108(Integer)
2020-03-17 17:57:00.484 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 10
2020-03-17 17:57:00.542 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:57:00.544 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:57:00.538(Timestamp), 更新角色操作(String), 执行了com.dsl.example.controller.UserController类的updateRole方法(String), UPDATE sys_role
        SET
            role_name = ?
        WHERE id = ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:57:00.556 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 17:57:00.720 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:00.721 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:00.725 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:00.726 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:00.727 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 17:57:00.728 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 17:57:00.738 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 27
2020-03-17 17:57:00.745 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:57:00.746 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:57:00.743(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 17:57:00.749 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 17:57:08.981 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:08.982 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:08.983 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:08.984 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:08.985 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:08.987 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:08.988 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:08.989 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:08.993 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 17:57:08.994 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 17:57:08.996 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 4
2020-03-17 17:57:09.001 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:57:09.004 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:57:08.997(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 17:57:09.009 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 17:57:09.013 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:09.014 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:09.015 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:09.016 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:09.018 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:57:09.019 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 17:57:09.021 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 1
2020-03-17 17:57:09.022 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:57:09.023 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:57:09.028 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 18
2020-03-17 17:57:09.031 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:57:09.033 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:57:09.029(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:57:09.091 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 17:57:55.763 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:55.764 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:55.765 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:55.765 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:55.766 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: select count(0) from sys_user WHERE username=? AND delete_status='1'; 
2020-03-17 17:57:55.767 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: admin001(String)
2020-03-17 17:57:55.769 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 17:57:55.770 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_user (username, password, nickname, role_id) VALUES (?, ?, ?, ?) 
2020-03-17 17:57:55.771 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: admin001(String), 123(String), 系统管理员(String), 1(Integer)
2020-03-17 17:57:55.931 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 17:57:55.937 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:57:55.939 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:57:55.935(Timestamp), 添加用户操作(String), 执行了com.dsl.example.controller.UserController类的addUser方法(String), INSERT INTO sys_user
        (username, password, nickname, role_id) VALUES
            (?, ?, ?, ?)(String), Popeye/192.168.240.1(String)
2020-03-17 17:57:55.941 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 17:57:56.077 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:56.078 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:56.079 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:57:56.080 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:57:56.083 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:57:56.085 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 
2020-03-17 17:57:56.087 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 1
2020-03-17 17:57:56.088 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:57:56.089 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:57:56.096 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 36
2020-03-17 17:57:56.098 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:57:56.100 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:57:56.097(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:57:56.102 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 17:58:21.667 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:21.667 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:21.670 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:21.671 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:21.673 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:21.674 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:21.674 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 17:58:21.678 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 
2020-03-17 17:58:21.678 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:21.679 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:21.681 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 17:58:21.682 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 
2020-03-17 17:58:21.690 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 27
2020-03-17 17:58:21.693 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 18
2020-03-17 17:58:21.694 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:21.695 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:21.694(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:21.696 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:21.697 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:21.694(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:21.698 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 17:58:21.699 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 17:58:26.958 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:26.961 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:26.963 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:26.964 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:26.967 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:58:26.968 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 
2020-03-17 17:58:26.971 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 1
2020-03-17 17:58:26.973 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:58:26.974 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:58:26.983 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 36
2020-03-17 17:58:26.989 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:26.990 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:26.985(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:26.993 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 17:58:27.266 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:27.267 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:27.269 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:27.270 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:27.273 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:27.274 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:27.277 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:27.277 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:27.279 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 17:58:27.280 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 17:58:27.283 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 4
2020-03-17 17:58:27.285 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:27.287 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:27.284(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:27.290 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 17:58:39.029 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:39.030 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:39.031 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:39.032 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:39.034 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 17:58:39.036 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 系统管理员1号(String), 1(Integer), 1(String), 10019(Integer)
2020-03-17 17:58:39.250 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 17:58:39.254 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:39.256 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:39.252(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:39.258 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 17:58:40.353 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:40.353 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:40.354 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:40.355 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:40.357 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 17:58:40.358 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 17:58:40.360 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 17:58:40.361 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 17:58:40.362 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:58:40.369 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 36
2020-03-17 17:58:40.372 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:40.373 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:40.371(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:40.375 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 17:58:42.536 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:42.538 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:42.539 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:42.539 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:42.540 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:42.540 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:42.541 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:42.542 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:42.542 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 17:58:42.543 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 17:58:42.543 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 17:58:42.544 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 17:58:42.548 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 18
2020-03-17 17:58:42.551 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:42.551 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 27
2020-03-17 17:58:42.552 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:42.549(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:42.554 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:42.555 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 17:58:42.555 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:42.552(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:42.557 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 17:58:45.039 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:45.039 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:45.076 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:45.076 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:45.112 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(*) FROM sys_log 
2020-03-17 17:58:45.115 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 17:58:45.127 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 17:58:45.129 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT w.log_id id, w.username username, date_format(w.create_time, '%Y.%m.%d %T') createTime, w.operation operation, w.content content, w.sql sqlC, w.ip ip FROM sys_log w ORDER BY w.log_id DESC LIMIT ?, ? 
2020-03-17 17:58:45.131 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 17:58:45.139 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 50
2020-03-17 17:58:45.144 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:45.146 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:45.141(Timestamp), 日志查看点击(String), 执行了com.dsl.example.controller.LogController类的listLog方法(String), SELECT
            w.log_id                                      id,
            w.username                                 username,
            date_format(w.create_time, '%Y.%m.%d %T') createTime,
            w.operation                               operation,
            w.content                                 content,
            w.sql                                     sqlC,
            w.ip                                      ip
        FROM sys_log w
        ORDER BY w.log_id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:45.148 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 17:58:57.152 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:57.153 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:57.154 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:57.155 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:57.157 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 17:58:57.158 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 
2020-03-17 17:58:57.167 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 27
2020-03-17 17:58:57.172 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:57.174 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:57.168(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:57.177 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 17:58:57.205 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:57.206 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:57.207 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 17:58:57.208 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 17:58:57.211 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 17:58:57.212 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 
2020-03-17 17:58:57.216 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 18
2020-03-17 17:58:57.220 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 17:58:57.221 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 17:58:57.218(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 17:58:57.224 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 18:00:02.963 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:02.964 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:02.965 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:02.966 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:02.968 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, p.id permissionId FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.id = ? 
2020-03-17 18:00:02.968 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 4(Integer)
2020-03-17 18:00:02.970 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 8
2020-03-17 18:00:02.971 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: UPDATE sys_role SET role_name = ? WHERE id = ? 
2020-03-17 18:00:02.972 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 测试人员(String), 4(Integer)
2020-03-17 18:00:02.983 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 18:00:03.035 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:03.036 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:03.032(Timestamp), 更新角色操作(String), 执行了com.dsl.example.controller.UserController类的updateRole方法(String), UPDATE sys_role
        SET
            role_name = ?
        WHERE id = ?(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:03.038 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 18:00:03.218 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:03.220 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:03.223 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:03.224 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:03.226 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 18:00:03.227 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 
2020-03-17 18:00:03.235 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 27
2020-03-17 18:00:03.237 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:03.239 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:03.236(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:03.242 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 18:00:25.154 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:25.155 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:25.157 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:25.157 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:25.158 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:25.160 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 18:00:25.158 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:25.161 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 18:00:25.161 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:25.162 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 1
2020-03-17 18:00:25.162 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:25.164 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 18:00:25.164 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:25.165 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:25.165 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 18:00:25.166 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:25.166 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:25.168 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 18:00:25.169 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 
2020-03-17 18:00:25.171 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 36
2020-03-17 18:00:25.170 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 4
2020-03-17 18:00:25.175 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:25.175 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:25.176 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:25.171(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:25.176 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:25.171(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:25.178 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 18:00:25.181 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 18:00:26.081 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:26.082 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:26.084 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:26.086 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:26.090 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 18:00:26.092 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 18:00:26.102 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 27
2020-03-17 18:00:26.106 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:26.108 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:26.103(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:26.111 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 18:00:26.390 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:26.390 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:26.392 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:26.393 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:26.395 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 18:00:26.397 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 18:00:26.401 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 18
2020-03-17 18:00:26.404 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:26.406 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:26.402(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:26.409 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 18:00:29.135 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:29.136 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:29.137 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:29.138 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:29.138 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:29.139 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:29.139 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 18:00:29.140 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 18:00:29.140 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:29.141 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:29.142 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 1
2020-03-17 18:00:29.144 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 18:00:29.144 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:29.145 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 18:00:29.145 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:29.146 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:00:29.147 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:00:29.149 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 18:00:29.152 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 36
2020-03-17 18:00:29.152 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 18:00:29.154 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 4
2020-03-17 18:00:29.154 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:29.157 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:00:29.156 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:29.153(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:29.158 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:00:29.155(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 18:00:29.158 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 18:00:29.160 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 18:01:12.963 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:01:12.964 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:01:12.965 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:01:12.966 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:01:12.968 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: UPDATE sys_user SET nickname = ? , role_id = ? , delete_status = ? WHERE id = ? and id != 10001 
2020-03-17 18:01:12.969 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 测试员1号(String), 4(Integer), 1(String), 10003(Integer)
2020-03-17 18:01:13.007 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 18:01:13.012 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:01:13.013 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:01:13.008(Timestamp), 更新用户操作(String), 执行了com.dsl.example.controller.UserController类的updateUser方法(String), UPDATE sys_user
        SET
        nickname = ?
         

        , role_id = ?
        , delete_status = ?
        WHERE id = ? and id != 10001(String), Popeye/192.168.240.1(String)
2020-03-17 18:01:13.016 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
2020-03-17 18:01:14.094 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:01:14.094 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:01:14.095 INFO  --- [UserRealm.java:36][http-nio-8080-exec-7] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:01:14.096 INFO  --- [UserRealm.java:37][http-nio-8080-exec-7] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:01:14.098 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 18:01:14.099 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 
2020-03-17 18:01:14.100 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 1
2020-03-17 18:01:14.102 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 18:01:14.103 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 18:01:14.108 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==      Total: 36
2020-03-17 18:01:14.110 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:01:14.112 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:01:14.109(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 18:01:14.139 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-7] - <==    Updates: 1
2020-03-17 18:02:58.179 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:02:58.181 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:02:58.185 INFO  --- [UserRealm.java:36][http-nio-8080-exec-8] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:02:58.187 INFO  --- [UserRealm.java:37][http-nio-8080-exec-8] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:02:58.189 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: select count(0) from sys_user WHERE username=? AND delete_status='1'; 
2020-03-17 18:02:58.192 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: pjm001(String)
2020-03-17 18:02:58.194 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==      Total: 1
2020-03-17 18:02:58.196 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_user (username, password, nickname, role_id) VALUES (?, ?, ?, ?) 
2020-03-17 18:02:58.197 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: pjm001(String), 123(String), 项目经理1号(String), 2(Integer)
2020-03-17 18:02:58.235 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 18:02:58.240 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:02:58.242 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:02:58.237(Timestamp), 添加用户操作(String), 执行了com.dsl.example.controller.UserController类的addUser方法(String), INSERT INTO sys_user
        (username, password, nickname, role_id) VALUES
            (?, ?, ?, ?)(String), Popeye/192.168.240.1(String)
2020-03-17 18:02:58.244 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-8] - <==    Updates: 1
2020-03-17 18:02:58.421 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:02:58.422 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:02:58.425 INFO  --- [UserRealm.java:36][http-nio-8080-exec-9] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:02:58.425 INFO  --- [UserRealm.java:37][http-nio-8080-exec-9] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:02:58.428 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 18:02:58.429 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 
2020-03-17 18:02:58.431 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 1
2020-03-17 18:02:58.432 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 18:02:58.433 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 18:02:58.442 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==      Total: 54
2020-03-17 18:02:58.444 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:02:58.446 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:02:58.443(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 18:02:58.449 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-9] - <==    Updates: 1
2020-03-17 18:05:22.872 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:22.873 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:22.875 INFO  --- [UserRealm.java:36][http-nio-8080-exec-1] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:22.876 INFO  --- [UserRealm.java:37][http-nio-8080-exec-1] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:22.878 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: select count(0) from sys_user WHERE username=? AND delete_status='1'; 
2020-03-17 18:05:22.879 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: pg001(String)
2020-03-17 18:05:22.882 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==      Total: 1
2020-03-17 18:05:22.883 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_user (username, password, nickname, role_id) VALUES (?, ?, ?, ?) 
2020-03-17 18:05:22.885 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: pg001(String), 123(String), 开发员1号(String), 3(Integer)
2020-03-17 18:05:22.919 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 18:05:22.925 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:05:22.926 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:05:22.921(Timestamp), 添加用户操作(String), 执行了com.dsl.example.controller.UserController类的addUser方法(String), INSERT INTO sys_user
        (username, password, nickname, role_id) VALUES
            (?, ?, ?, ?)(String), Popeye/192.168.240.1(String)
2020-03-17 18:05:22.941 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-1] - <==    Updates: 1
2020-03-17 18:05:23.123 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:23.124 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:23.128 INFO  --- [UserRealm.java:36][http-nio-8080-exec-10] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:23.132 INFO  --- [UserRealm.java:37][http-nio-8080-exec-10] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:23.134 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 18:05:23.135 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 
2020-03-17 18:05:23.138 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 1
2020-03-17 18:05:23.139 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 18:05:23.140 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 18:05:23.152 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==      Total: 57
2020-03-17 18:05:23.157 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:05:23.158 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:05:23.155(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 18:05:23.162 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-10] - <==    Updates: 1
2020-03-17 18:05:32.398 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:32.399 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:32.402 INFO  --- [UserRealm.java:36][http-nio-8080-exec-3] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:32.404 INFO  --- [UserRealm.java:37][http-nio-8080-exec-3] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:32.406 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT count(*) FROM sys_log 
2020-03-17 18:05:32.407 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 
2020-03-17 18:05:32.409 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 1
2020-03-17 18:05:32.410 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: SELECT w.log_id id, w.username username, date_format(w.create_time, '%Y.%m.%d %T') createTime, w.operation operation, w.content content, w.sql sqlC, w.ip ip FROM sys_log w ORDER BY w.log_id DESC LIMIT ?, ? 
2020-03-17 18:05:32.412 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 18:05:32.417 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==      Total: 50
2020-03-17 18:05:32.424 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:05:32.426 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:05:32.419(Timestamp), 日志查看点击(String), 执行了com.dsl.example.controller.LogController类的listLog方法(String), SELECT
            w.log_id                                      id,
            w.username                                 username,
            date_format(w.create_time, '%Y.%m.%d %T') createTime,
            w.operation                               operation,
            w.content                                 content,
            w.sql                                     sqlC,
            w.ip                                      ip
        FROM sys_log w
        ORDER BY w.log_id DESC LIMIT ?, ?(String), Popeye/192.168.240.1(String)
2020-03-17 18:05:32.428 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-3] - <==    Updates: 1
2020-03-17 18:05:38.096 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:38.096 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:38.098 INFO  --- [UserRealm.java:36][http-nio-8080-exec-4] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:38.096 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:38.099 INFO  --- [UserRealm.java:37][http-nio-8080-exec-4] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:38.099 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:38.100 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: SELECT p.id id, p.menu_name menuName, p.permission_name permissionName, p.required_permission requiredPerm FROM sys_permission p; 
2020-03-17 18:05:38.101 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 
2020-03-17 18:05:38.102 INFO  --- [UserRealm.java:36][http-nio-8080-exec-2] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:05:38.102 INFO  --- [UserRealm.java:37][http-nio-8080-exec-2] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:05:38.104 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: SELECT r.id roleId, r.role_name roleName, u.id userId, u.nickname nickname, p.id permissionId, p.menu_code menuCode, p.menu_name menuName, p.permission_name permissionName FROM sys_role r LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1' LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1' LEFT JOIN sys_permission p ON rp.permission_id = p.id WHERE r.delete_status = '1' ORDER BY r.id, p.id 
2020-03-17 18:05:38.105 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 
2020-03-17 18:05:38.105 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==      Total: 18
2020-03-17 18:05:38.109 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:05:38.111 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:05:38.106(Timestamp), 角色权限表显示(String), 执行了com.dsl.example.controller.UserController类的listAllPermission方法(String), SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;(String), Popeye/192.168.240.1(String)
2020-03-17 18:05:38.111 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==      Total: 27
2020-03-17 18:05:38.114 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:05:38.116 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:05:38.112(Timestamp), 角色列表点击(String), 执行了com.dsl.example.controller.UserController类的listRole方法(String), SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id(String), Popeye/192.168.240.1(String)
2020-03-17 18:05:38.117 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-4] - <==    Updates: 1
2020-03-17 18:05:38.121 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-2] - <==    Updates: 1
2020-03-17 18:06:11.158 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:06:11.158 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:06:11.160 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:06:11.159 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:06:11.160 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:06:11.161 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:06:11.161 INFO  --- [UserRealm.java:36][http-nio-8080-exec-5] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:06:11.162 INFO  --- [UserRealm.java:37][http-nio-8080-exec-5] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:06:11.162 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:06:11.164 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT count(0) FROM sys_user u WHERE u.delete_status = '1' 
2020-03-17 18:06:11.164 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:06:11.164 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 
2020-03-17 18:06:11.164 INFO  --- [UserRealm.java:36][http-nio-8080-exec-6] - permission的值为:{"menuList":["role","log","user"],"roleId":4,"nickname":"系统管理员","roleName":"测试人员","permissionList":["user:list","user:add","role:update","role:list","user:update","role:delete","role:add","log:list"],"userId":10003}
2020-03-17 18:06:11.165 INFO  --- [UserRealm.java:37][http-nio-8080-exec-6] - 本用户权限为:[user:list, user:add, role:update, role:list, user:update, role:delete, role:add, log:list]
2020-03-17 18:06:11.166 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 1
2020-03-17 18:06:11.167 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: SELECT u.*, r.role_name roleName, CONCAT(p.menu_name, p.permission_name) permissionName FROM ( SELECT id userId, username username, nickname nickname, role_id roleId, delete_status deleteStatus, DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime, DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime FROM sys_user WHERE delete_status = '1' ORDER BY id LIMIT ?, ? ) u LEFT JOIN sys_role r ON r.id = u.roleId LEFT JOIN sys_role_permission rp ON rp.role_id = r.id LEFT JOIN sys_permission p ON p.id = rp.permission_id ORDER BY u.userId 
2020-03-17 18:06:11.168 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), 50(Integer)
2020-03-17 18:06:11.167 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: SELECT id roleId, role_name roleName FROM sys_role WHERE delete_status='1' 
2020-03-17 18:06:11.171 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 
2020-03-17 18:06:11.174 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==      Total: 57
2020-03-17 18:06:11.180 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:06:11.182 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:06:11.176(Timestamp), 用户列表点击(String), 执行了com.dsl.example.controller.UserController类的listUser方法(String), SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                 LIMIT ?, ?
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId(String), Popeye/192.168.240.1(String)
2020-03-17 18:06:11.184 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-5] - <==    Updates: 1
2020-03-17 18:06:11.186 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==      Total: 4
2020-03-17 18:06:11.191 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==>  Preparing: INSERT INTO sys_log VALUES (?,?,?,?,?,?,?) 
2020-03-17 18:06:11.194 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - ==> Parameters: 0(Integer), admin(String), 2020-03-17 18:06:11.188(Timestamp), 获取所有角色操作(String), 执行了com.dsl.example.controller.UserController类的getAllRoles方法(String), SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'(String), Popeye/192.168.240.1(String)
2020-03-17 18:06:11.330 DEBUG --- [BaseJdbcLogger.java:159][http-nio-8080-exec-6] - <==    Updates: 1
